{"version":3,"file":"tallyjs.js","sources":["../src/index.js"],"sourcesContent":["/**\n * @TODO: Prefix & Suffix like $ and %\n * @TODO: Intl.NumberFormat\n *  - Solves issues like grouping. 1,000 vs 1000\n *  - Solves issues with decimals and separators. 1.000,05 vs 1,000.05 vs 1 000.05 etc\n * @TODO: Easing?\n *  - Least likely to be added\n * @TODO: Extract util functions where possible\n */\n\nconst validNum = n => typeof n === 'number' && isNaN(n) === false;\nconst countUp = (start, end, prog, dur) => start + (end - start) * (prog / dur);\nconst countDown = (start, end, prog, dur) => start - ((start - end) * (prog / dur));\nconst generateFormatter = (locale, options, override) => {\n    console.log(locale, options, override);\n    if (!override) return { format: (v) => v };\n    if (locale === null) return new Intl.NumberFormat();\n    return new Intl.NumberFormat(locale, options);\n}\nclass Tally {\n\tconstructor(el) {\n\t\tthis.el = el;\n\t\tthis.dur = parseFloat(el.dataset.duration || '1') * 1000;\n\t\tthis.startTime = false;\n\t\tthis.endVal = parseFloat(el.dataset.count || '0');\n\t\tthis.startVal = el.textContent.length > 0 && validNum(+el.textContent) ? +el.textContent : 0;\n\t\tthis.dec = parseInt(el.dataset.decimal || '0');\n\t\tthis.done = false;\n        this.group = true;\n        if ('group' in el.dataset && el.dataset.group === 'false') {\n            this.group = false;\n        }\n\n\t\tthis.tagType = el.localName === 'input' ? \n            'input' : \n            el.tagName === 'text' || el.tagName === 'tspan' ?\n                'text' :\n                'element';\n        /** true == count down, false == count up */\n        this.down = this.startVal > this.endVal\n\n        this.formatter = generateFormatter(el.dataset.locale || null, JSON.parse(el.dataset.format || '{}'), this.group);\n\n\t\tif ('scroll' in el.dataset) {\n\t\t\tthis.observer = new IntersectionObserver((entries, observer) => {\n\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\tthis.count();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (el.dataset.scroll === 'once') {\n\t\t\t\t\t\t\tobserver.disconnect();\n                            this.observer = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.observer.observe(el);\n\t\t}\n\t}\n\t\n\tcount(ts) {\n\t\tif (this.done) this.reset();\n\n\t\tif (ts === undefined) {\n\t\t\tthis.rAF = requestAnimationFrame(this.count.bind(this));\n\t\t\treturn;\n\t\t}\n\t\tif (!this.startTime) {\n\t\t\tthis.startTime = ts;\n\t\t}\n\t\t\n\t\tlet progress = ts - this.startTime;\n\t\tthis.remaining = this.dur - progress;\n\n\t\tlet nextVal = this.dir ? \n            countUp(this.startVal, this.endVal, progress, this.dur) : \n            countDown(this.startVal, this.endVal, progress, this.dur);\n\t\t\n\t\tif (this.down && nextVal < this.endVal) {\n\t\t\tnextVal = this.endVal;\n\t\t} else if (!this.down && nextVal > this.endVal) {\n            nextVal = this.endVal;\n        }\n\n        nextVal = parseFloat(nextVal.toFixed(this.dec));\n        if (this.formatter) nextVal = this.formatter.format(nextVal);\n\n\t\tthis.frameVal = nextVal;\n\t\tif (progress < this.dur) {\n\t\t\tthis.rAF = requestAnimationFrame(this.count.bind(this));\n\t\t} else {\n\t\t\tthis.done = true;\n\t\t}\n\t}\n\t\n\treset() {\n\t\tthis.done = false;\n\t\tthis.frameVal = this.startVal;\n\t\tthis.startTime = false;\n\t\tcancelAnimationFrame(this.rAF);\n\t}\n\t\n\tset frameVal(v) {\n        switch (this.tagType) {\n            case 'input':\n                this.el.value = v;\n            case 'element':\n            case 'text':\n                this.el.textContent = v;\n            default:\n                this.el.textContent = v;\n        }\n\t}\n\t\n\tget frameVal() {\n\t\treturn this.el.textContent\n\t}\n}\n\nexport {\n    Tally\n}"],"names":["el","n","locale","options","override","this","dur","parseFloat","dataset","duration","startTime","endVal","count","startVal","textContent","length","isNaN","dec","parseInt","decimal","done","group","tagType","localName","tagName","down","formatter","JSON","parse","format","console","log","Intl","NumberFormat","v","observer","entries","_step","value","isIntersecting","_this","scroll","disconnect","reset","observe","ts","undefined","progress","remaining","start","nextVal","dir","end","prog","countDown","toFixed","frameVal","rAF","requestAnimationFrame","bind","cancelAnimationFrame","Tally","key","get"],"mappings":"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"}