{"version":3,"file":"tallyjs.modern.mjs","sources":["../src/index.js"],"sourcesContent":["/**\n * @TODO: Prefix & Suffix like $ and %\n * @TODO: Intl.NumberFormat\n *  - Solves issues like grouping. 1,000 vs 1000\n *  - Solves issues with decimals and separators. 1.000,05 vs 1,000.05 vs 1 000.05 etc\n * @TODO: Easing?\n *  - Least likely to be added\n * @TODO: Extract util functions where possible\n */\n\nconst validNum = n => typeof n === 'number' && isNaN(n) === false;\nconst countUp = (start, end, prog, dur) => start + (end - start) * (prog / dur);\nconst countDown = (start, end, prog, dur) => start - ((start - end) * (prog / dur));\nconst generateFormatter = (locale, options, override) => {\n    if (!override) return { format: (v) => v };\n    if (locale === null) return new Intl.NumberFormat();\n    return new Intl.NumberFormat(locale, options);\n}\n\nconst generateObserver = inst => new IntersectionObserver((entries, observer) => {\n    for (let i = 0;i<entries.length;i++) {\n        if (entries[i].isIntersecting) {\n            inst.count();\n            \n            if (entries[i].target.dataset.scroll === 'once') {\n                observer.disconnect();\n                inst.observer = null;\n            }\n        } else {\n            inst.reset();\n        }\n    }\n});\nclass Tally {\n\tconstructor(el) {\n\t\tthis.el = el;\n\t\tthis.dur = parseFloat(el.dataset.duration || '1') * 1000;\n\t\tthis.startTime = false;\n\t\tthis.endVal = parseFloat(el.dataset.count || '0');\n\t\tthis.startVal = el.textContent.length > 0 && validNum(+el.textContent) ? +el.textContent : 0;\n\t\tthis.dec = parseInt(el.dataset.decimal || '0');\n\t\tthis.done = false;\n        this.group = true;\n        if ('group' in el.dataset && el.dataset.group === 'false') {\n            this.group = false;\n        }\n\n\t\tthis.tagType = el.localName === 'input' ? \n            'input' : \n            el.tagName === 'text' || el.tagName === 'tspan' ?\n                'text' :\n                'element';\n\n        /** true == count down, false == count up */\n        this.down = this.startVal > this.endVal\n\n        this.formatter = generateFormatter(el.dataset.locale || null, JSON.parse(el.dataset.format || '{}'), this.group);\n\n\t\tif ('scroll' in el.dataset) {\n\t\t\tthis.observer = generateObserver(this);\n\t\t\tthis.observer.observe(el);\n\t\t}\n\t}\n\t\n\tcount(ts) {\n\t\tif (this.done) this.reset();\n\n\t\tif (ts === undefined) {\n\t\t\tthis.rAF = requestAnimationFrame(this.count.bind(this));\n\t\t\treturn;\n\t\t}\n\t\tif (!this.startTime) {\n\t\t\tthis.startTime = ts;\n\t\t}\n\t\t\n        const {\n            startVal,\n            endVal,\n            dur\n        } = this;\n\n\t\tlet progress = ts - this.startTime,\n            nextVal = this.dir ? \n                // Turn this back into plain equations seems to be making\n                // more code than it should be \n                startVal + (endVal - startVal) * (progress / dur) : \n                startVal - ((startVal - endVal) * (progress / dur));\n\t\t\n\t\tif (this.down && nextVal < endVal) {\n\t\t\tnextVal = endVal;\n\t\t} else if (!this.down && nextVal > endVal) {\n            nextVal = endVal;\n        }\n\n        nextVal = parseFloat(nextVal.toFixed(this.dec));\n        if (this.formatter) nextVal = this.formatter.format(nextVal);\n\n\t\tthis.frameVal = nextVal;\n\t\tif (progress < dur) {\n\t\t\tthis.rAF = requestAnimationFrame(this.count.bind(this));\n\t\t} else {\n\t\t\tthis.done = true;\n\t\t}\n\t}\n\t\n\treset() {\n\t\tthis.done = false;\n\t\tthis.frameVal = this.startVal;\n\t\tthis.startTime = false;\n\t\tcancelAnimationFrame(this.rAF);\n\t}\n\t\n\tset frameVal(v) {\n        switch (this.tagType) {\n            case 'input':\n                this.el.value = v;\n            case 'element':\n            case 'text':\n                this.el.textContent = v;\n            default:\n                this.__text = v;\n        }\n\t}\n\t\n\tget frameVal() {\n        switch (this.tagType) {\n            case 'input':\n                return this.el.value;\n            case 'element':\n            case 'text':\n                return this.el.textContent;\n            default:\n                return this.__text;\n        }\n\t}\n}\n\nexport {\n    Tally\n}"],"names":["constructor","el","n","locale","options","inst","this","dur","parseFloat","dataset","duration","startTime","endVal","count","startVal","textContent","length","isNaN","dec","parseInt","decimal","done","group","tagType","localName","tagName","down","formatter","JSON","parse","format","NumberFormat","v","observer","entries","i","isIntersecting","target","scroll","disconnect","reset","observe","ts","undefined","rAF","requestAnimationFrame","bind","progress","nextVal","dir","toFixed","frameVal","cancelAnimationFrame","value","__text"],"mappings":"AAiCA,QACCA,YAAYC,GAxBIC,MAGUC,EAAQC,EAMVC,EAgBvBC,KAAKL,GAAKA,EACVK,KAAKC,IAA+C,IAAzCC,WAAWP,EAAGQ,QAAQC,UAAY,KAC7CJ,KAAKK,WAAY,EACjBL,KAAKM,OAASJ,WAAWP,EAAGQ,QAAQI,OAAS,KAC7CP,KAAKQ,SAAWb,EAAGc,YAAYC,OAAS,GA7BP,iBAAlBd,GA6BwCD,EAAGc,eA7BA,IAAbE,MAAMf,IA6BuBD,EAAGc,YAAc,EAC3FT,KAAKY,IAAMC,SAASlB,EAAGQ,QAAQW,SAAW,KAC1Cd,KAAKe,MAAO,EACNf,KAAKgB,OAAQ,EACT,UAAWrB,EAAGQ,SAAgC,UAArBR,EAAGQ,QAAQa,QACpChB,KAAKgB,OAAQ,GAGvBhB,KAAKiB,QAA2B,UAAjBtB,EAAGuB,UACR,QACe,SAAfvB,EAAGwB,SAAqC,UAAfxB,EAAGwB,QACxB,OACA,UAGRnB,KAAKoB,KAAOpB,KAAKQ,SAAWR,KAAKM,OAEjCN,KAAKqB,WA3CcxB,EA2CgBF,EAAGQ,QAAQN,QAAU,KA3C7BC,EA2CmCwB,KAAKC,MAAM5B,EAAGQ,QAAQqB,QAAU,MAAOxB,KAAKgB,MAzC/F,OAAXnB,EAAwB,SAAS4B,aAC9B,SAASA,aAAa5B,EAAQC,GAFf,CAAE0B,OAASE,GAAMA,IA4CrC,WAAY/B,EAAGQ,UAClBH,KAAK2B,UAxCiB5B,EAwCWC,KAxCH,yBAAyB,CAAC4B,EAASD,KAChE,IAAK,IAAIE,EAAI,EAAEA,EAAED,EAAQlB,OAAOmB,IACxBD,EAAQC,GAAGC,gBACX/B,EAAKQ,QAEoC,SAArCqB,EAAQC,GAAGE,OAAO5B,QAAQ6B,SAC1BL,EAASM,aACTlC,EAAK4B,SAAW,OAGpB5B,EAAKmC,WA+BdlC,KAAK2B,SAASQ,QAAQxC,IAIxBY,MAAM6B,GAGL,GAFIpC,KAAKe,MAAMf,KAAKkC,aAETG,IAAPD,EAEH,YADApC,KAAKsC,IAAMC,sBAAsBvC,KAAKO,MAAMiC,KAAKxC,QAG7CA,KAAKK,YACTL,KAAKK,UAAY+B,GAGZ,MAAM5B,SACFA,EADEF,OAEFA,EAFEL,IAGFA,GACAD,KAEV,IAAIyC,EAAWL,EAAKpC,KAAKK,UACfqC,EAAU1C,KAAK2C,IAGXnC,EAAkCiC,EAAWxC,GAAjCK,EAASE,GACrBA,EAAmCiC,EAAWxC,GAAjCO,EAAWF,IAElCN,KAAKoB,MAAQsB,EAAUpC,IAEfN,KAAKoB,MAAQsB,EAAUpC,KADlCoC,EAAUpC,GAKLoC,EAAUxC,WAAWwC,EAAQE,QAAQ5C,KAAKY,MACtCZ,KAAKqB,YAAWqB,EAAU1C,KAAKqB,UAAUG,OAAOkB,IAE1D1C,KAAK6C,SAAWH,EACZD,EAAWxC,EACdD,KAAKsC,IAAMC,sBAAsBvC,KAAKO,MAAMiC,KAAKxC,OAEjDA,KAAKe,MAAO,EAIdmB,QACClC,KAAKe,MAAO,EACZf,KAAK6C,SAAW7C,KAAKQ,SACrBR,KAAKK,WAAY,EACjByC,qBAAqB9C,KAAKsC,KAGvBO,aAASnB,GACN,OAAQ1B,KAAKiB,SACT,IAAK,QACDjB,KAAKL,GAAGoD,MAAQrB,EACpB,IAAK,UACL,IAAK,OACD1B,KAAKL,GAAGc,YAAciB,EAC1B,QACI1B,KAAKgD,OAAStB,GAIzBmB,eACG,OAAQ7C,KAAKiB,SACT,IAAK,QACD,YAAYtB,GAAGoD,MACnB,IAAK,UACL,IAAK,OACD,OAAYpD,KAAAA,GAAGc,YACnB,QACI,YAAYuC"}