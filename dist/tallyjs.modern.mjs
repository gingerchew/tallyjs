class t{constructor(t){var e,s,a,i;this.el=t,this.dur=1e3*parseFloat(t.dataset.duration||"1"),this.startTime=!1,this.endVal=parseFloat(t.dataset.count||"0"),this.startVal=t.textContent.length>0&&"number"==typeof(e=+t.textContent)&&!1===isNaN(e)?+t.textContent:0,this.dec=parseInt(t.dataset.decimal||"0"),this.done=!1,this.group=!0,"group"in t.dataset&&"false"===t.dataset.group&&(this.group=!1),this.tagType="input"===t.localName?"input":"text"===t.tagName||"tspan"===t.tagName?"text":"element",this.down=this.startVal>this.endVal,this.formatter=(s=t.dataset.locale||null,a=JSON.parse(t.dataset.format||"{}"),this.group?null===s?new Intl.NumberFormat:new Intl.NumberFormat(s,a):{format:t=>t}),"scroll"in t.dataset&&(this.observer=(i=this,new IntersectionObserver((t,e)=>{for(let s=0;s<t.length;s++)t[s].isIntersecting?(i.count(),"once"===t[s].target.dataset.scroll&&(e.disconnect(),i.observer=null)):i.reset()})),this.observer.observe(t))}count(t){if(this.done&&this.reset(),void 0===t)return void(this.rAF=requestAnimationFrame(this.count.bind(this)));this.startTime||(this.startTime=t);const{startVal:e,endVal:s,dur:a}=this;let i=t-this.startTime,r=this.dir?e+i/a*(s-e):e-i/a*(e-s);(this.down&&r<s||!this.down&&r>s)&&(r=s),r=parseFloat(r.toFixed(this.dec)),this.formatter&&(r=this.formatter.format(r)),this.frameVal=r,i<a?this.rAF=requestAnimationFrame(this.count.bind(this)):this.done=!0}reset(){this.done=!1,this.frameVal=this.startVal,this.startTime=!1,cancelAnimationFrame(this.rAF)}set frameVal(t){switch(this.tagType){case"input":this.el.value=t;case"element":case"text":this.el.textContent=t;default:this.__text=t}}get frameVal(){switch(this.tagType){case"input":return this.el.value;case"element":case"text":return this.el.textContent;default:return this.__text}}}export{t as Tally};
//# sourceMappingURL=tallyjs.modern.mjs.map
